{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/samaraabigail/Desktop/sea/snap-circle/screens/CirclesStory.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styled from \"styled-components/native\";\nimport Video from 'react-native-video';\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\n\nvideoBuffer = function videoBuffer(isBuffer) {\n  console.log(isBuffer);\n};\n\nexport default function CirclesStory() {\n  var _this = this;\n\n  var snapVideo = require(\"../assets/snap-demo.MP$\");\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      status = _React$useState2[0],\n      setStatus = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      flex: 1,\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \" My video Project\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Video, {\n    source: snapVideo,\n    style: {\n      width: windowWidth,\n      height: windowHeight\n    },\n    controls: true,\n    onBuffer: this.videoBuffer,\n    ref: function ref(_ref) {\n      _this.player = _ref;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: status.isPlaying ? 'Pause' : 'Play',\n    onPress: function onPress() {\n      return status.isPlaying ? video.current.pauseAsync() : video.current.playAsync();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })));\n}\n;\nvar styles = StyleSheet.create({\n  backgroundVideo: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    botton: 0,\n    right: 0\n  }\n});","map":{"version":3,"sources":["/Users/samaraabigail/Desktop/sea/snap-circle/screens/CirclesStory.js"],"names":["React","Component","Fragment","styled","Video","windowWidth","Dimensions","get","width","windowHeight","height","videoBuffer","isBuffer","console","log","CirclesStory","snapVideo","require","useState","status","setStatus","alignItems","flex","justifyContent","ref","player","styles","buttons","isPlaying","video","current","pauseAsync","playAsync","StyleSheet","create","backgroundVideo","position","top","left","botton","right"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAUA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,IAAMC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA7C;AACA,IAAMC,YAAY,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAA9C;;AAEAC,WAAW,GAAC,qBAACC,QAAD,EAAa;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,CAFD;;AAIA,eAAe,SAASG,YAAT,GAAyB;AAAA;;AAEpC,MAAMC,SAAS,GAAGC,OAAO,2BAAzB;;AACA,wBAA4BjB,KAAK,CAACkB,QAAN,CAAe,EAAf,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,IAAI,EAAE,CAA9B;AAAiCC,MAAAA,cAAc,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEP,SAAf;AACA,IAAA,KAAK,EAAE;AAACR,MAAAA,KAAK,EAAEH,WAAR;AAAqBK,MAAAA,MAAM,EAAED;AAA7B,KADP;AAEA,IAAA,QAAQ,EAAE,IAFV;AAGA,IAAA,QAAQ,EAAE,KAAKE,WAHf;AAIA,IAAA,GAAG,EAAE,aAACa,IAAD,EAAS;AACZ,MAAA,KAAI,CAACC,MAAL,GAAcD,IAAd;AACD,KAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFF,EAoCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAER,MAAM,CAACS,SAAP,GAAmB,OAAnB,GAA6B,MADtC;AAEE,IAAA,OAAO,EAAE;AAAA,aACPT,MAAM,CAACS,SAAP,GAAmBC,KAAK,CAACC,OAAN,CAAcC,UAAd,EAAnB,GAAgDF,KAAK,CAACC,OAAN,CAAcE,SAAd,EADzC;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApCF,CADF;AA+CH;AAAA;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,eAAe,EAAC;AACdC,IAAAA,QAAQ,EAAE,UADI;AAEdC,IAAAA,GAAG,EAAE,CAFS;AAGdC,IAAAA,IAAI,EAAE,CAHQ;AAIdC,IAAAA,MAAM,EAAE,CAJM;AAKdC,IAAAA,KAAK,EAAE;AALO;AADe,CAAlB,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Dimensions,\n  TouchableHighlight,\n  Image,\n  Button,\n} from \"react-native\";\nimport styled from \"styled-components/native\";\n//import { Video, AVPlaybackStatus } from 'expo-av';\nimport Video from 'react-native-video';\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nvideoBuffer=(isBuffer) =>{\n  console.log(isBuffer)\n}\n\nexport default function CirclesStory () {\n    // const video = React.useRef(null);\n    const snapVideo = require('../assets/snap-demo.MP$')\n    const [status, setStatus] = React.useState({});\n    return (\n      <View style={{ alignItems: 'center', flex: 1, justifyContent: 'center'}}>\n        <Text> My video Project</Text>\n        <View> \n        <Video source={snapVideo}\n        style={{width: windowWidth, height: windowHeight}}\n        controls={true}\n        onBuffer={this.videoBuffer}\n        ref={(ref) => {\n          this.player = ref\n        }}\n\n        // jenna's code\n          // ref={video}\n          // style={styles.video}\n          // source={{\n          //   uri: '../assets/snap-demo.MP4',\n          // }}\n          // useNativeControls\n          // resizeMode=\"contain\"\n          // isLooping\n          // onPlaybackStatusUpdate={status => setStatus(() => status)}\n\n\n\n\n          //my code\n        //   source={{uri: '..assets/snap-demo.MP4'}}\n        //         ref={(ref) => {\n        //           this.player = ref\n        //         }}\n        //         onBuffer={this.onBuffer}\n        //         onError={this.videoError}\n        //         style={styles.backgroundVideo\n        // \n        />\n        </View>\n        <View style={styles.buttons}>\n          <Button\n            title={status.isPlaying ? 'Pause' : 'Play'}\n            onPress={() =>\n              status.isPlaying ? video.current.pauseAsync() : video.current.playAsync()\n            }\n          />\n        </View>\n      </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n  backgroundVideo:{\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    botton: 0,\n    right: 0,\n  },\n//   video: {\n//     height: windowHeight,\n//     position: \"absolute\",\n//     top: 0,\n//     left: 0,\n//     alignItems: \"stretch\",\n//     bottom: 0,\n//     right: 0,\n//   }\n});"]},"metadata":{},"sourceType":"module"}