{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/samaraabigail/Desktop/sea/snap-circle/screens/CirclesStory.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styled from \"styled-components/native\";\nimport { Video } from 'react-native-video';\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nexport default function CirclesStory() {\n  var video = React.useRef(null);\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      status = _React$useState2[0],\n      setStatus = _React$useState2[1];\n\n  var snapVideo = require(\"../assets/snap-demo.MP4\");\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(Video, {\n    source: {\n      uri: snapVideo\n    },\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }));\n}\n;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/samaraabigail/Desktop/sea/snap-circle/screens/CirclesStory.js"],"names":["React","Component","Fragment","styled","Video","windowWidth","Dimensions","get","width","windowHeight","height","CirclesStory","video","useRef","useState","status","setStatus","snapVideo","require","styles","container","uri","flex","StyleSheet","create"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAUA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,KAAT,QAAsB,oBAAtB;AAEA,IAAMC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA7C;AACA,IAAMC,YAAY,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAA9C;AAEA,eAAe,SAASC,YAAT,GAAyB;AACpC,MAAMC,KAAK,GAAGZ,KAAK,CAACa,MAAN,CAAa,IAAb,CAAd;;AACA,wBAA4Bb,KAAK,CAACc,QAAN,CAAe,EAAf,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,SAAS,GAAGC,OAAO,2BAAzB;;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACA,IAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAEJ;AAAN,KADR;AAEA,IAAA,KAAK,EAAE;AAACK,MAAAA,IAAI,EAAC;AAAN,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAyBH;AAAA;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Dimensions,\n  TouchableHighlight,\n  Image,\n  Button,\n} from \"react-native\";\nimport styled from \"styled-components/native\";\n//import { Video, AVPlaybackStatus } from 'expo-av';\nimport { Video } from 'react-native-video';\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nexport default function CirclesStory () {\n    const video = React.useRef(null);\n    const [status, setStatus] = React.useState({});\n    const snapVideo = require('../assets/snap-demo.MP4');\n    return (\n      <View style={styles.container}>\n        <Video \n        source={{uri: snapVideo}}\n        style={{flex:1}}\n          // ref={video}\n          // style={styles.video}\n          // source={{\n          //   uri: '../assets/snap-demo.MP4',\n          // }}\n          // useNativeControls\n          // resizeMode=\"contain\"\n          // isLooping\n          // onPlaybackStatusUpdate={status => setStatus(() => status)}\n        />\n        {/* <View style={styles.buttons}>\n          <Button\n            title={status.isPlaying ? 'Pause' : 'Play'}\n            onPress={() =>\n              status.isPlaying ? video.current.pauseAsync() : video.current.playAsync()\n            }\n          />\n        </View> */}\n      </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n//   video: {\n//     height: windowHeight,\n//     position: \"absolute\",\n//     top: 0,\n//     left: 0,\n//     alignItems: \"stretch\",\n//     bottom: 0,\n//     right: 0,\n//   }\n});"]},"metadata":{},"sourceType":"module"}