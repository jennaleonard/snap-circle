{"ast":null,"code":"var _jsxFileName = \"/Users/jennaleonard/Desktop/sea/snap-circle/navigation/BottomTabNavigator.js\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { getFocusedRouteNameFromRoute } from \"@react-navigation/native\";\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport TabBarIcon from \"../components/TabBarIcon\";\nimport CameraScreen from \"../screens/CameraScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport StoriesScreen from \"../screens/StoriesScreen\";\nimport SpotlightScreen from \"../screens/SpotlightScreen\";\nimport CirclesStory from \"../screens/CirclesStory\";\nimport MapScreen from \"../screens/MapScreen\";\nimport Colors from \"../constants/Colors\";\nvar BottomTab = createBottomTabNavigator();\nvar INITIAL_ROUTE_NAME = \"Camera\";\nexport default function BottomTabNavigator(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  React.useLayoutEffect(function () {\n    var navigationOptions = {\n      headerTitle: getHeaderTitle(route)\n    };\n\n    if (getHeaderTitle(route) === \"Stories\") {\n      navigationOptions.headerRight = function () {\n        return React.createElement(TouchableOpacity, {\n          style: styles.Circle,\n          onPress: function onPress() {\n            navigation.navigate(\"Profile\");\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }\n        }, React.createElement(Ionicons, {\n          name: \"person-circle-outline\",\n          size: 40,\n          style: {\n            marginRight: 5\n          },\n          color: Colors.snapblue,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }\n        }));\n      };\n    } else {\n      navigationOptions.headerRight = null;\n    }\n\n    navigation.setOptions(navigationOptions);\n  }, [navigation, route]);\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: INITIAL_ROUTE_NAME,\n    tabBarOptions: {\n      activeTintColor: Colors.tintColor,\n      showLabel: true,\n      style: {\n        backgroundColor: \"black\",\n        paddingTop: 5,\n        borderColor: \"black\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Map\",\n    component: MapScreen,\n    options: {\n      title: \"Snap Map\",\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"map-outline\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Chats\",\n    component: HomeScreen,\n    options: {\n      title: \"Your Chats\",\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"chatbox-ellipses-outline\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Camera\",\n    component: CameraScreen,\n    options: {\n      title: \"Camera\",\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"camera-outline\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Stories\",\n    component: StoriesScreen,\n    options: {\n      title: \"Your Stories\",\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"people-outline\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Spotlight\",\n    component: SpotlightScreen,\n    options: {\n      title: \"Spotlight\",\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"play-outline\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction getHeaderTitle(route) {\n  var _getFocusedRouteNameF;\n\n  var routeName = (_getFocusedRouteNameF = getFocusedRouteNameFromRoute(route)) != null ? _getFocusedRouteNameF : INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case \"Map\":\n      return \"Map\";\n\n    case \"Chats\":\n      return \"Chats\";\n\n    case \"Chat\":\n      return \"Chat\";\n\n    case \"Profile\":\n      return \"Profile\";\n\n    case \"Stories\":\n      return \"Stories\";\n\n    case \"Camera\":\n      return \"Camera\";\n\n    case \"Friends\":\n      return \"Friends\";\n\n    case \"Spotlight\":\n      return \"Spotlight\";\n  }\n}\n\nvar styles = StyleSheet.create({\n  tab: {\n    backgroundColor: \"black\"\n  }\n});","map":{"version":3,"sources":["/Users/jennaleonard/Desktop/sea/snap-circle/navigation/BottomTabNavigator.js"],"names":["createBottomTabNavigator","getFocusedRouteNameFromRoute","React","TouchableOpacity","Ionicons","TabBarIcon","CameraScreen","HomeScreen","StoriesScreen","SpotlightScreen","CirclesStory","MapScreen","Colors","BottomTab","INITIAL_ROUTE_NAME","BottomTabNavigator","navigation","route","useLayoutEffect","navigationOptions","headerTitle","getHeaderTitle","headerRight","styles","Circle","navigate","marginRight","snapblue","setOptions","activeTintColor","tintColor","showLabel","style","backgroundColor","paddingTop","borderColor","title","tabBarIcon","focused","routeName","StyleSheet","create","tab"],"mappings":"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","sourcesContent":["import { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { getFocusedRouteNameFromRoute } from \"@react-navigation/native\";\nimport * as React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport TabBarIcon from \"../components/TabBarIcon\";\n\nimport CameraScreen from \"../screens/CameraScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport StoriesScreen from \"../screens/StoriesScreen\";\nimport SpotlightScreen from \"../screens/SpotlightScreen\";\nimport CirclesStory from \"../screens/CirclesStory\";\nimport MapScreen from \"../screens/MapScreen\";\n\nimport Colors from \"../constants/Colors\";\n\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = \"Camera\";\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  React.useLayoutEffect(() => {\n    const navigationOptions = { headerTitle: getHeaderTitle(route) };\n    if (getHeaderTitle(route) === \"Stories\") {\n      navigationOptions.headerRight = () => (\n        <TouchableOpacity\n          style={styles.Circle}\n          onPress={() => {\n            navigation.navigate(\"Profile\");\n          }}\n        >\n          <Ionicons\n            name={\"person-circle-outline\"}\n            size={40}\n            style={{ marginRight: 5 }}\n            color={Colors.snapblue}\n          />\n        </TouchableOpacity>\n      );\n    } else {\n      navigationOptions.headerRight = null;\n    }\n    navigation.setOptions(navigationOptions);\n  }, [navigation, route]);\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName={INITIAL_ROUTE_NAME}\n      tabBarOptions={{\n        activeTintColor: Colors.tintColor,\n        showLabel: true,\n        style: {\n          backgroundColor: \"black\",\n          paddingTop: 5,\n          borderColor: \"black\",\n        },\n      }}\n    >\n      <BottomTab.Screen\n        name=\"Map\"\n        component={MapScreen}\n        options={{\n          title: \"Snap Map\",\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} name=\"map-outline\" />\n          ),\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Chats\"\n        component={HomeScreen}\n        options={{\n          title: \"Your Chats\",\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} name=\"chatbox-ellipses-outline\" />\n          ),\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Camera\"\n        component={CameraScreen}\n        options={{\n          title: \"Camera\",\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} name=\"camera-outline\" />\n          ),\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Stories\"\n        component={StoriesScreen}\n        options={{\n          title: \"Your Stories\",\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} name=\"people-outline\" />\n          ),\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Spotlight\"\n        component={SpotlightScreen}\n        options={{\n          title: \"Spotlight\",\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} name=\"play-outline\" />\n          ),\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = getFocusedRouteNameFromRoute(route) ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case \"Map\":\n      return \"Map\";\n    case \"Chats\":\n      return \"Chats\";\n    case \"Chat\":\n      return \"Chat\";\n    case \"Profile\":\n      return \"Profile\";\n    case \"Stories\":\n      return \"Stories\";\n    case \"Camera\":\n      return \"Camera\";\n    case \"Friends\":\n      return \"Friends\";\n    case \"Spotlight\":\n      return \"Spotlight\";\n  }\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    backgroundColor: \"black\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}