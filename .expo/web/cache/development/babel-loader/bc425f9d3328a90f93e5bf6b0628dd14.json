{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/samaraabigail/Desktop/sea/snap-circle/screens/FriendsScreen.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from \"react-native-elements\";\nimport CustomMultiPicker from \"react-native-multiple-select-list\";\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Colors from \"../constants/Colors\";\nimport db from \"../firebase\";\nimport firebase from \"@firebase/app\";\nexport default function FriendsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatName = _useState2[0],\n      setChatName = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userList = _useState4[0],\n      setUserList = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedUsers = _useState6[0],\n      setSelectedUsers = _useState6[1];\n\n  useEffect(function () {\n    return db.collection(\"Users\").onSnapshot(function (querySnapshot) {\n      var newUserList = {};\n      querySnapshot.forEach(function (user) {\n        if (user.id !== firebase.auth().currentUser.uid) {\n          newUserList[user.id] = user.data().displayName;\n        }\n      });\n      setUserList(newUserList);\n    });\n  }, []);\n\n  var onPressCreateChat = function onPressCreateChat() {\n    console.log(\"Create Chat button pressed!\");\n    console.log(selectedUsers);\n    console.log(chatName);\n    var chatsRef = db.collection(\"Chats\");\n    chatsRef.doc(chatName).get().then(function (doc) {\n      if (doc.exists) {\n        alert(\"Chat with this name already exists!\");\n      } else {\n        chatsRef.doc(chatName).set({\n          messages: [],\n          users: [].concat(_toConsumableArray(selectedUsers), [firebase.auth().currentUser.uid]),\n          lastUpdated: Date.now()\n        }).then(function () {\n          console.log(\"Chat successfully created!\");\n          setSelectedUsers([]);\n          setChatName(\"\");\n          navigation.navigate(\"Chats\");\n        }).catch(function (error) {\n          console.error(\"Error creating chat: \", error);\n        });\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.friendListContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(CustomMultiPicker, {\n    options: userList,\n    search: true,\n    multiple: true,\n    placeholder: \"To: \",\n    placeholderTextColor: \"#757575\",\n    returnValue: \"value\",\n    callback: function callback(selected) {\n      selected = selected.filter(function (user) {\n        return user !== undefined;\n      });\n      setSelectedUsers(selected);\n    },\n    rowBackgroundColor: \"white\",\n    rowHeight: 55,\n    rowRadius: 5,\n    searchIconName: \"ios-checkmark\",\n    iconColor: Colors.snapblue,\n    iconSize: 30,\n    selectedIconName: \"ios-checkmark-circle-outline\",\n    unselectedIconName: \"ios-radio-button-off-outline\",\n    scrollViewHeight: 250,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"New Chat Name\",\n    keyboardType: \"email-address\",\n    onChangeText: setChatName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: chatName.length < 1 || selectedUsers.length < 1 ? [styles.buttonContainer, styles.disabledButton] : [styles.buttonContainer, styles.button],\n    onPress: onPressCreateChat,\n    disabled: chatName.length < 1 || selectedUsers.length < 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Create Chat\"))));\n}\nvar offset = 16;\nvar styles = StyleSheet.create({\n  friendListContainer: {\n    padding: 10\n  },\n  inputContainer: {\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 8,\n    height: 45,\n    margin: offset\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: \"#FFFFFF\",\n    flex: 1\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: offset,\n    borderRadius: 8,\n    backgroundColor: \"transparent\"\n  },\n  button: {\n    backgroundColor: Colors.snapblue\n  },\n  disabledButton: {\n    backgroundColor: Colors.snapgray\n  },\n  buttonText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/samaraabigail/Desktop/sea/snap-circle/screens/FriendsScreen.js"],"names":["Text","CustomMultiPicker","React","useState","useEffect","Colors","db","firebase","FriendsScreen","navigation","chatName","setChatName","userList","setUserList","selectedUsers","setSelectedUsers","collection","onSnapshot","querySnapshot","newUserList","forEach","user","id","auth","currentUser","uid","data","displayName","onPressCreateChat","console","log","chatsRef","doc","get","then","exists","alert","set","messages","users","lastUpdated","Date","now","navigate","catch","error","styles","friendListContainer","selected","filter","undefined","snapblue","inputContainer","inputs","length","buttonContainer","disabledButton","button","buttonText","offset","StyleSheet","create","padding","backgroundColor","borderRadius","height","margin","marginLeft","borderBottomColor","flex","flexDirection","justifyContent","alignItems","marginHorizontal","snapgray","color"],"mappings":"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","sourcesContent":["import {\n  View,\n  TextInput,\n  StyleSheet,\n  KeyboardAvoidingView,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Text } from \"react-native-elements\";\nimport CustomMultiPicker from \"react-native-multiple-select-list\";\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Colors from \"../constants/Colors\";\nimport db from \"../firebase\";\nimport firebase from \"@firebase/app\";\n\nexport default function FriendsScreen({ navigation }) {\n  const [chatName, setChatName] = useState(\"\");\n  const [userList, setUserList] = useState({});\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  useEffect(() => {\n    // Download all users info from Firebase \"Users\" collection\n    // (and listen for future updates)\n    // (in case someone joins the app in the mean time)\n    // (or updates their display name)\n    return db.collection(\"Users\").onSnapshot((querySnapshot) => {\n      let newUserList = {};\n\n      querySnapshot.forEach((user) => {\n        // Don't put current user in list\n        if (user.id !== firebase.auth().currentUser.uid) {\n          newUserList[user.id] = user.data().displayName;\n        }\n      });\n\n      setUserList(newUserList);\n    });\n  }, []);\n\n  const onPressCreateChat = () => {\n    console.log(\"Create Chat button pressed!\");\n    console.log(selectedUsers);\n    console.log(chatName);\n    // Create new chat in Firebase\n    let chatsRef = db.collection(\"Chats\");\n    chatsRef\n      .doc(chatName)\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          alert(\"Chat with this name already exists!\");\n        } else {\n          chatsRef\n            .doc(chatName)\n            .set({\n              messages: [],\n              users: [...selectedUsers, firebase.auth().currentUser.uid],\n              lastUpdated: Date.now(),\n            })\n            .then(() => {\n              console.log(\"Chat successfully created!\");\n              setSelectedUsers([]);\n              setChatName(\"\");\n              navigation.navigate(\"Chats\");\n            })\n            .catch((error) => {\n              console.error(\"Error creating chat: \", error);\n            });\n        }\n      });\n  };\n\n  return (\n    <View>\n      <View style={styles.friendListContainer}>\n        <CustomMultiPicker\n          options={userList}\n          search={true} // should show search bar?\n          multiple={true} // allow multiple select\n          placeholder={\"To: \"}\n          placeholderTextColor={\"#757575\"}\n          returnValue={\"value\"} // label or value\n          callback={(selected) => {\n            selected = selected.filter((user) => user !== undefined);\n            setSelectedUsers(selected);\n          }} // callback, array of selected items\n          rowBackgroundColor={\"white\"}\n          rowHeight={55}\n          rowRadius={5}\n          searchIconName=\"ios-checkmark\"\n          iconColor={Colors.snapblue}\n          iconSize={30}\n          selectedIconName={\"ios-checkmark-circle-outline\"}\n          unselectedIconName={\"ios-radio-button-off-outline\"}\n          scrollViewHeight={250}\n        />\n      </View>\n      <KeyboardAvoidingView behavior=\"position\">\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.inputs}\n            placeholder=\"New Chat Name\"\n            keyboardType=\"email-address\"\n            onChangeText={setChatName}\n          />\n        </View>\n        <TouchableOpacity\n          style={\n            chatName.length < 1 || selectedUsers.length < 1\n              ? [styles.buttonContainer, styles.disabledButton]\n              : [styles.buttonContainer, styles.button]\n          }\n          onPress={onPressCreateChat}\n          disabled={chatName.length < 1 || selectedUsers.length < 1}\n        >\n          <Text style={styles.buttonText}>Create Chat</Text>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst offset = 16;\nconst styles = StyleSheet.create({\n  friendListContainer: {\n    padding: 10,\n  },\n  inputContainer: {\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 8,\n    height: 45,\n    margin: offset,\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: \"#FFFFFF\",\n    flex: 1,\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: offset,\n    borderRadius: 8,\n    backgroundColor: \"transparent\",\n  },\n  button: {\n    backgroundColor: Colors.snapblue,\n  },\n  disabledButton: {\n    backgroundColor: Colors.snapgray,\n  },\n  buttonText: {\n    color: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}