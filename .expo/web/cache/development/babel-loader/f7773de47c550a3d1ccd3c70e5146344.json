{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/samaraabigail/Desktop/sea/snap-circle/screens/SignupScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from \"@firebase/app\";\nimport Colors from \"../constants/Colors\";\nimport React, { useState, useEffect } from \"react\";\nimport db from \"../firebase\";\nexport default function SignupScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var onPressCreate = function onPressCreate() {\n    return _regeneratorRuntime.async(function onPressCreate$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password).then(onSuccess, onFailure));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSuccess = function onSuccess(userCredential) {\n    console.log(\"SUCCESS\");\n    var curr_user = userCredential.user;\n    db.collection(\"Users\").doc(curr_user.uid).set({\n      email: email,\n      displayName: name\n    }, {\n      merge: true\n    }).then(function () {\n      console.log(\"User info successfully updated!\");\n    }).catch(function (error) {\n      console.error(\"Error updating user info: \", error);\n    });\n  };\n\n  var onFailure = function onFailure() {\n    alert(\"Sign up failure. Please try again.\");\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Welcome to Snapchat\")), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Name:\"), React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Name\",\n    keyboardType: \"email-address\",\n    onChangeText: setName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Email:\"), React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    onChangeText: setEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Password (6+ characters):\"), React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    onChangeText: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.signupButton],\n    onPress: onPressCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.signupText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Sign up\")));\n}\nvar resizeMode = \"center\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    paddingTop: 180,\n    backgroundColor: \"white\"\n  },\n  imageContainer: {\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  snapLogo: {\n    height: 150,\n    marginBottom: 15,\n    width: 150\n  },\n  inputContainer: {\n    borderBottomColor: \"#F5FCFF\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: \"#FFFFFF\",\n    flex: 1\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\"\n  },\n  signupButton: {\n    backgroundColor: Colors.snapblue\n  },\n  signupText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  headerText: {\n    fontWeight: \"bold\",\n    fontSize: 28\n  },\n  headerContainer: {\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/samaraabigail/Desktop/sea/snap-circle/screens/SignupScreen.js"],"names":["firebase","Colors","React","useState","useEffect","db","SignupScreen","email","setEmail","password","setPassword","name","setName","onPressCreate","auth","createUserWithEmailAndPassword","then","onSuccess","onFailure","userCredential","console","log","curr_user","user","collection","doc","uid","set","displayName","merge","catch","error","alert","styles","container","headerContainer","headerText","inputContainer","inputs","buttonContainer","signupButton","signupText","resizeMode","StyleSheet","create","flex","alignItems","paddingTop","backgroundColor","imageContainer","width","height","marginBottom","flexDirection","snapLogo","borderBottomColor","borderRadius","borderBottomWidth","marginLeft","justifyContent","snapblue","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import {\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n} from \"react-native\";\nimport firebase from \"@firebase/app\";\nimport Colors from \"../constants/Colors\";\nimport React, { useState, useEffect } from \"react\";\nimport db from \"../firebase\";\n\nexport default function SignupScreen() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const onPressCreate = async () => {\n    await firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(onSuccess, onFailure);\n  };\n\n  const onSuccess = (userCredential) => {\n    console.log(\"SUCCESS\");\n    var curr_user = userCredential.user;\n\n    // Update user info in \"Users\" collection\n    db.collection(\"Users\")\n      .doc(curr_user.uid)\n      .set(\n        {\n          email: email,\n          displayName: name,\n        },\n        { merge: true }\n      )\n      .then(() => {\n        console.log(\"User info successfully updated!\");\n      })\n      .catch((error) => {\n        console.error(\"Error updating user info: \", error);\n      });\n  };\n\n  const onFailure = () => {\n    alert(\"Sign up failure. Please try again.\");\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.headerContainer}>\n        <Text style={styles.headerText}>Welcome to Snapchat</Text>\n      </View>\n      <View style={styles.inputContainer}>\n        <Text>Name:</Text>\n        <TextInput\n          style={styles.inputs}\n          placeholder=\"Name\"\n          keyboardType=\"email-address\"\n          onChangeText={setName}\n        />\n      </View>\n      <View style={styles.inputContainer}>\n        <Text>Email:</Text>\n        <TextInput\n          style={styles.inputs}\n          placeholder=\"Email\"\n          keyboardType=\"email-address\"\n          onChangeText={setEmail}\n        />\n      </View>\n\n      <View style={styles.inputContainer}>\n        <Text>Password (6+ characters):</Text>\n        <TextInput\n          style={styles.inputs}\n          placeholder=\"Password\"\n          secureTextEntry={true}\n          onChangeText={setPassword}\n        />\n      </View>\n\n      <TouchableOpacity\n        style={[styles.buttonContainer, styles.signupButton]}\n        onPress={onPressCreate}\n      >\n        <Text style={styles.signupText}>Sign up</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst resizeMode = \"center\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    paddingTop: 180,\n    backgroundColor: \"white\",\n  },\n  imageContainer: {\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  snapLogo: {\n    height: 150,\n    marginBottom: 15,\n    width: 150,\n  },\n  inputContainer: {\n    borderBottomColor: \"#F5FCFF\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: \"#FFFFFF\",\n    flex: 1,\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\",\n  },\n  signupButton: {\n    backgroundColor: Colors.snapblue,\n  },\n  signupText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  headerText: {\n    fontWeight: \"bold\",\n    fontSize: 28,\n  },\n  headerContainer: {\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}