{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/jennaleonard/Desktop/sea/snap-circle/screens/MapScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Colors from \"../constants/Colors\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Location from \"expo-location\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport colors from \"../constants/Colors\";\nvar LOS_ANGELES_REGION = {\n  latitude: 34.0522,\n  longitude: -118.2437,\n  latitudeDelta: 0.0922,\n  longitudeDelta: 0.0421\n};\nexport default function MapScreen() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currLocation = _useState2[0],\n      setCurrLocation = _useState2[1];\n\n  var mapView = useRef(null);\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== \"granted\")) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg(\"Permission to access location was denied\");\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setCurrLocation(location.coords);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var goToCurrLocation = function goToCurrLocation() {\n    mapView == null ? void 0 : mapView.current.animateToRegion({\n      latitude: currLocation.latitude,\n      longitude: currLocation.longitude,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    }, 1000);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(MapView, {\n    ref: mapView,\n    style: styles.map,\n    initialRegion: LOS_ANGELES_REGION,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, currLocation ? React.createElement(Marker, {\n    coordinate: currLocation,\n    title: \"Current Location\",\n    description: \"You are here!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }) : null), currLocation ? React.createElement(View, {\n    style: styles.locateButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.locateButton,\n    onPress: goToCurrLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: \"navigate\",\n    size: 40,\n    color: Colors.snapblue,\n    style: {\n      marginTop: 5,\n      marginLeft: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }))) : null);\n}\nvar styles = StyleSheet.create({\n  map: _objectSpread({}, StyleSheet.absoluteFillObject),\n  locateButtonContainer: {\n    position: \"absolute\",\n    bottom: 20,\n    right: 20\n  },\n  locateButton: {\n    height: 50,\n    width: 50,\n    borderRadius: 25,\n    backgroundColor: colors.snapyellow\n  }\n});","map":{"version":3,"sources":["/Users/jennaleonard/Desktop/sea/snap-circle/screens/MapScreen.js"],"names":["React","useState","useEffect","useRef","Colors","Location","MapView","Marker","TouchableOpacity","Ionicons","colors","LOS_ANGELES_REGION","latitude","longitude","latitudeDelta","longitudeDelta","MapScreen","currLocation","setCurrLocation","mapView","requestForegroundPermissionsAsync","status","setErrorMsg","getCurrentPositionAsync","location","coords","goToCurrLocation","current","animateToRegion","styles","map","locateButtonContainer","locateButton","snapblue","marginTop","marginLeft","StyleSheet","create","absoluteFillObject","position","bottom","right","height","width","borderRadius","backgroundColor","snapyellow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Colors from \"../constants/Colors\";\nimport { StyleSheet, View } from \"react-native\";\nimport * as Location from \"expo-location\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport colors from \"../constants/Colors\";\n\nconst LOS_ANGELES_REGION = {\n  latitude: 34.0522,\n  longitude: -118.2437,\n  latitudeDelta: 0.0922,\n  longitudeDelta: 0.0421,\n};\n\nexport default function MapScreen() {\n  const [currLocation, setCurrLocation] = useState(null);\n  const mapView = useRef(null);\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setCurrLocation(location.coords);\n    })();\n  }, []);\n\n  const goToCurrLocation = () => {\n    mapView?.current.animateToRegion(\n      {\n        latitude: currLocation.latitude,\n        longitude: currLocation.longitude,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421,\n      },\n      1000\n    );\n  };\n\n  return (\n    <>\n      <MapView\n        ref={mapView}\n        style={styles.map}\n        initialRegion={LOS_ANGELES_REGION}\n      >\n        {currLocation ? (\n          <Marker\n            coordinate={currLocation}\n            title={\"Current Location\"}\n            description={\"You are here!\"}\n          />\n        ) : null}\n      </MapView>\n      {currLocation ? (\n        <View style={styles.locateButtonContainer}>\n          <TouchableOpacity\n            style={styles.locateButton}\n            onPress={goToCurrLocation}\n          >\n            <Ionicons\n              name={\"navigate\"}\n              size={40}\n              color={Colors.snapblue}\n              style={{ marginTop: 5, marginLeft: 3 }}\n            />\n          </TouchableOpacity>\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  map: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  locateButtonContainer: {\n    position: \"absolute\",\n    bottom: 20,\n    right: 20,\n  },\n  locateButton: {\n    height: 50,\n    width: 50,\n    borderRadius: 25,\n    backgroundColor: colors.snapyellow,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}