{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/samaraabigail/Desktop/sea/snap-circle/node_modules/react-native-multiple-select-list/multipleSelect.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, PropTypes } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport Icon from \"@expo/vector-icons/Ionicons\";\n\nvar CustomMultiPicker = function (_Component) {\n  _inherits(CustomMultiPicker, _Component);\n\n  var _super = _createSuper(CustomMultiPicker);\n\n  function CustomMultiPicker(props) {\n    var _this;\n\n    _classCallCheck(this, CustomMultiPicker);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function () {\n      var selected = _this.props.selected;\n\n      if (typeof selected === \"object\") {\n        selected.map(function (select) {\n          _this._onSelect(select);\n        });\n      } else {\n        _this._onSelect(selected);\n      }\n    };\n\n    _this._onSelect = function (item) {\n      var selected = _this.state.selected;\n\n      if (_this.props.multiple) {\n        if (selected.indexOf(item) == -1) {\n          selected.push(item);\n\n          _this.setState({\n            selected: selected\n          });\n        } else {\n          selected = selected.filter(function (i) {\n            return i != item;\n          });\n\n          _this.setState({\n            selected: selected\n          });\n        }\n      } else {\n        if (selected.indexOf(item) == -1) {\n          selected = [item];\n\n          _this.setState({\n            selected: selected\n          });\n        } else {\n          selected = [];\n\n          _this.setState({\n            selected: selected\n          });\n        }\n      }\n\n      _this.props.callback(selected);\n    };\n\n    _this._onSearch = function (text) {\n      _this.setState({\n        searchText: text.length > 0 ? text.toLowerCase() : null\n      });\n    };\n\n    _this._isSelected = function (item) {\n      var selected = _this.state.selected;\n\n      if (selected.indexOf(item) == -1) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.filterObjectByValue = function (obj, predicate) {\n      return Object.keys(obj).filter(function (key) {\n        return predicate(obj[key]);\n      }).reduce(function (res, key) {\n        return res[key] = obj[key], res;\n      }, {});\n    };\n\n    _this.state = {\n      pageWidth: Dimensions.get('window').width,\n      pageHeight: Dimensions.get('window').height,\n      searchText: null,\n      selected: []\n    };\n    return _this;\n  }\n\n  _createClass(CustomMultiPicker, [{\n    key: \"getNewDimensions\",\n    value: function getNewDimensions(event) {\n      var pageHeight = event.nativeEvent.layout.height;\n      var pageWidth = event.nativeEvent.layout.width;\n      this.setState({\n        pageHeight: pageHeight,\n        pageWidth: pageWidth\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          options = _this$props.options,\n          returnValue = _this$props.returnValue;\n      var list = this.state.searchText ? this.filterObjectByValue(options, function (option) {\n        return option.toLowerCase().includes(_this2.state.searchText);\n      }) : options;\n      var labels = Object.keys(list).map(function (i) {\n        return list[i];\n      });\n      var values = Object.keys(list);\n      return React.createElement(View, {\n        onLayout: function onLayout(evt) {\n          _this2.getNewDimensions(evt);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }, this.props.search && React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          height: 55\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 31\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: 15,\n          marginLeft: 15,\n          backgroundColor: 'transparent'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-search-outline\",\n        color: this.props.iconColor,\n        size: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      })), React.createElement(TextInput, {\n        style: {\n          width: this.state.pageWidth - 20,\n          height: 35,\n          margin: 0,\n          marginTop: 10,\n          marginLeft: -25,\n          padding: 5,\n          paddingLeft: 30,\n          borderColor: this.props.iconColor,\n          borderWidth: 1,\n          borderRadius: 5\n        },\n        onChangeText: function onChangeText(text) {\n          _this2._onSearch(text);\n        },\n        clearButtonMode: 'always',\n        placeholder: this.props.placeholder,\n        placeholderTextColor: this.props.placeholderTextColor,\n        underlineColorAndroid: 'transparent',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      })), React.createElement(ScrollView, {\n        style: {\n          padding: 5,\n          height: this.props.scrollViewHeight\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, labels.map(function (label, index) {\n        var itemKey = returnValue == \"label\" ? label : values[index];\n        return React.createElement(TouchableOpacity, {\n          key: Math.round(Math.random() * 1000000),\n          style: {\n            padding: 7,\n            marginTop: 0,\n            marginLeft: 2,\n            marginRight: 2,\n            marginBottom: 6,\n            backgroundColor: _this2.props.rowBackgroundColor,\n            height: _this2.props.rowHeight,\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            borderRadius: _this2.props.rowRadius\n          },\n          onPress: function onPress() {\n            _this2._onSelect(itemKey);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }\n        }, label), _this2._isSelected(itemKey) ? React.createElement(Icon, {\n          name: _this2.props.selectedIconName,\n          color: _this2.props.iconColor,\n          size: _this2.props.iconSize,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }\n        }) : React.createElement(Icon, {\n          name: _this2.props.unselectedIconName,\n          color: _this2.props.iconColor,\n          size: _this2.props.iconSize,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 19\n          }\n        }));\n      })));\n    }\n  }]);\n\n  return CustomMultiPicker;\n}(Component);\n\nexport { CustomMultiPicker as default };","map":{"version":3,"sources":["/Users/samaraabigail/Desktop/sea/snap-circle/node_modules/react-native-multiple-select-list/multipleSelect.js"],"names":["React","Component","PropTypes","Dimensions","get","width","height","Icon","CustomMultiPicker","props","componentDidMount","selected","map","select","_onSelect","item","state","multiple","indexOf","push","setState","filter","i","callback","_onSearch","text","searchText","length","toLowerCase","_isSelected","filterObjectByValue","obj","predicate","Object","keys","key","reduce","res","pageWidth","pageHeight","event","nativeEvent","layout","options","returnValue","list","option","includes","labels","values","evt","getNewDimensions","search","flexDirection","marginTop","marginLeft","backgroundColor","iconColor","margin","padding","paddingLeft","borderColor","borderWidth","borderRadius","placeholder","placeholderTextColor","scrollViewHeight","label","index","itemKey","Math","round","random","marginRight","marginBottom","rowBackgroundColor","rowHeight","justifyContent","alignItems","rowRadius","selectedIconName","iconSize","unselectedIconName"],"mappings":"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","sourcesContent":["/**\n * Multiple select list with search\n * ataomega@gmail.com\n * www.atasmohammadi.net\n * version 1.0\n */\nimport React, {Component, PropTypes} from \"react\";\nimport {\n  Text,\n  View,\n  Dimensions,\n  TouchableOpacity,\n  ScrollView,\n  TextInput\n} from 'react-native';\nvar { width, height } = Dimensions.get('window');\nimport Icon from 'react-native-vector-icons/Ionicons';\n\nexport default class CustomMultiPicker extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      pageWidth: Dimensions.get('window').width,\n      pageHeight: Dimensions.get('window').height,\n      searchText: null,\n      selected: []\n    };\n  }\n\n  componentDidMount = () => {\n    const selected = this.props.selected\n    if(typeof selected === \"object\"){\n      selected.map(select => {\n        this._onSelect(select)\n      })\n    } else {\n      this._onSelect(selected)\n    }\n  }\n\n  getNewDimensions(event){\n        var pageHeight = event.nativeEvent.layout.height\n        var pageWidth = event.nativeEvent.layout.width\n        this.setState({\n            pageHeight, pageWidth\n        })\n    }\n\n  _onSelect = (item) => {\n    var selected = this.state.selected\n    if(this.props.multiple){\n      if(selected.indexOf(item) == -1){\n        selected.push(item)\n        this.setState({\n          selected: selected\n        })\n      } else {\n        selected = selected.filter(i => i != item)\n        this.setState({\n          selected: selected\n        })\n      }\n    } else {\n      if(selected.indexOf(item) == -1){\n        selected = [item]\n        this.setState({\n          selected: selected\n        })\n      } else {\n        selected = []\n        this.setState({\n          selected: selected\n        })\n      }\n    }\n    this.props.callback(selected)\n  }\n\n  _onSearch = (text) => {\n    this.setState({\n      searchText: text.length > 0 ? text.toLowerCase() : null\n    })\n  }\n\n  _isSelected = (item) => {\n    const selected = this.state.selected\n    if(selected.indexOf(item) == -1){\n      return false\n    }\n    return true\n  }\n\n  filterObjectByValue = (obj, predicate) => {\n    return Object.keys(obj)\n          .filter( key => predicate(obj[key]) )\n          .reduce( (res, key) => (res[key] = obj[key], res), {} )\n  }\n\n  render(){\n    const { options, returnValue } = this.props;\n    const list = this.state.searchText ? this.filterObjectByValue(options, option => option.toLowerCase().includes(this.state.searchText)) : options\n    const labels = Object.keys(list).map(i => list[i])\n    const values = Object.keys(list)\n    return(\n      <View onLayout={(evt)=>{this.getNewDimensions(evt)}}>\n        {this.props.search && <View style={{ flexDirection: 'row', height: 55 }}>\n          <View style={{ marginTop: 15, marginLeft: 15, backgroundColor: 'transparent' }}>\n            <Icon name=\"ios-search-outline\" color={this.props.iconColor} size={25}/>\n          </View>\n          <TextInput\n            style={{\n              width: this.state.pageWidth-20,\n              height: 35,\n              margin: 0,\n              marginTop: 10,\n              marginLeft: -25,\n              padding: 5,\n              paddingLeft: 30,\n              borderColor: this.props.iconColor,\n              borderWidth: 1,\n              borderRadius: 5\n            }}\n            onChangeText={(text) => { this._onSearch(text) }}\n            clearButtonMode={'always'}\n            placeholder={this.props.placeholder}\n            placeholderTextColor={this.props.placeholderTextColor}\n            underlineColorAndroid={'transparent'}\n          />\n        </View>}\n        <ScrollView\n          style={{ padding: 5, height: this.props.scrollViewHeight }}\n        >\n          {labels.map((label, index) => {\n            const itemKey = returnValue == \"label\" ? label : values[index]\n            return(\n              <TouchableOpacity\n                key={Math.round(Math.random() * 1000000)}\n                style={{\n                  padding: 7,\n                  marginTop: 0,\n                  marginLeft: 2,\n                  marginRight: 2,\n                  marginBottom: 6,\n                  backgroundColor: this.props.rowBackgroundColor,\n                  height: this.props.rowHeight,\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  borderRadius: this.props.rowRadius\n                }}\n                onPress={() => {\n                  this._onSelect(itemKey)\n                }}\n              >\n                <Text>{label}</Text>\n                {\n\n                  this._isSelected(itemKey) ?\n                  <Icon name={this.props.selectedIconName} color={this.props.iconColor} size={this.props.iconSize} />\n                  :\n                  <Icon name={this.props.unselectedIconName} color={this.props.iconColor} size={this.props.iconSize} />\n                }\n              </TouchableOpacity>\n            )\n          })}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}